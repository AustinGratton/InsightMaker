nGenerations = showPrompt('How many generations will there be?')
nAlleles = showPrompt('How many alleles are being tracked per parent?')
nGenotypes = nAlleles*nAlleles


Gen1 = createPrimitive('Generation 1','Folder',[0,0],[750,((nAlleles)*50)+10*(nAlleles)+75])

Bottom = ((nAlleles)*50)+10*(nAlleles)+75

Parents = createPrimitive('Parents','Stock',[200,50],[100,50])
setValue(Parents, '[G1 Pop]')
setNonNegative(Parents,true)
G1pop = createPrimitive('G1 Pop','Variable', [225,100],[50,50])
setValue(G1pop, 50000)
setShowSlider(G1pop,true)
setSliderMax(G1pop,100000)
setSliderStep(G1pop,1)
createConnector('Link','Link',G1pop,Parents)


for (j = 0; j < nAlleles; j++) {
	for (i = 0; i < nAlleles; i++) {
		window['G1A'+(j+1)+'A'+(i+1)] = createPrimitive('G1 A'+(j+1)+'A'+(i+1),'Stock',[350,((j+1)*50)+10*(i+1)],[50,50])
		window['FlowA'+(j+1)+'A'+(i+1)] = createConnector('Flow G1 A'+(j+1)+'A'+(i+1),'Flow', Parents, findName('G1 A'+(j+1)+'A'+(i+1)))
 	}
}


for (i = 0; i < nAlleles; i++) {
	window['P1A'+(i+1)+'freq'] = createPrimitive('P1 A' + (i+1), 'Variable', [50, 50+(i+1)], [50,50])
	setShowSlider(window['P1A'+(i+1)+'freq'],true)
	setSliderMax(window['P1A'+(i+1)+'freq'],1)
	setSliderStep(window['P1A'+(i+1)+'freq'],0.01)
	setValue(window['P1A'+(i+1)+'freq'],.1)
	window['P2A'+(i+1)+'freq'] = createPrimitive('P2 A' + (i+1), 'Variable', [100, 50+(i+1)], [50,50])
	setShowSlider(window['P2A'+(i+1)+'freq'],true)
	setSliderMax(window['P2A'+(i+1)+'freq'],1)
	setSliderStep(window['P2A'+(i+1)+'freq'],0.01)
	setValue(window['P2A'+(i+1)+'freq'],.1)
}



for (j = 0; j < nAlleles; j++) {
	for (i = 0; i < nAlleles; i++) {
		createConnector('','Link',G1pop,window['FlowA'+(j+1)+'A'+(i+1)])
		createConnector('','Link',window['P1A'+(j+1)+'freq'],window['FlowA'+(j+1)+'A'+(i+1)])
		createConnector('','Link',window['P2A'+(j+1)+'freq'], window['FlowA'+(i+1)+'A'+(j+1)])
		setValue(window['FlowA'+(j+1)+'A'+(i+1)],'Round([G1 Pop]*[P1 A'+(j+1)+']*[P2 A'+(i+1)+'])')
	}
}


for (j = 0; j < nAlleles; j++) {
	for (i = 0; i < nAlleles; i++) {
		window['G1A'+(j+1)+'A'+(i+1)+'Height'] = createPrimitive('G1 A'+(j+1)+'A'+(i+1)+' Height','Variable',[400,(j+1)*50+10*(i+1)],[50,50])
	}
}	
	



for (j = 0; j < nAlleles; j++) {
	for (i = 0; i < nAlleles; i++) {

		window['HeightLinkA'+(j+1)+'A'+(i+1)] = createConnector('','Link', window['G1A'+(j+1)+'A'+(i+1)], window['G1A'+(j+1)+'A'+(i+1)+'Height'])
	}
}


for (j = 0; j < nAlleles; j++) {
	for (i = 0; i < nAlleles; i++) {
		setValue(window['G1A'+(j+1)+'A'+(i+1)+'Height'],'IfThenElse(Years = 1, Repeat(RandNormal([G1 A'+(j+1)+'A'+(i+1)+' Mean],[G1 A'+(j+1)+'A'+(i+1)+' SD]),[G1 A'+(j+1)+'A'+(i+1)+']), 0)')
	}
}

for (j = 0; j < nAlleles; j++) {
	for (i = 0; i < nAlleles; i++) {
		window['G1A'+(j+1)+'A'+(i+1)+'Mean'] = createPrimitive('G1 A'+(j+1)+'A'+(i+1)+' Mean','Variable',[450,(j+1)*50+10*(i+1)],[25,25])
		setShowSlider(window['G1A'+(j+1)+'A'+(i+1)+'Mean'],true)
		setSliderMax(window['G1A'+(j+1)+'A'+(i+1)+'Mean'],10)
		setSliderStep(window['G1A'+(j+1)+'A'+(i+1)+'Mean'],.1)
		setValue(window['G1A'+(j+1)+'A'+(i+1)+'Mean'],5)
	}
}


for (j = 0; j < nAlleles; j++) {
	for (i = 0; i < nAlleles; i++) {
		window['MeanLinkA'+(j+1)+'A'+(i+1)] = createConnector('', 'Link', window['G1A'+(j+1)+'A'+(i+1)+'Mean'], window['G1A'+(j+1)+'A'+(i+1)+'Height'])
	}
}


for (j = 0; j < nAlleles; j++) {
	for (i = 0; i < nAlleles; i++) {
		window['G1A'+(j+1)+'A'+(i+1)+'SD'] = createPrimitive('G1 A'+(j+1)+'A'+(i+1)+' SD','Variable',[450,(j+1)*50+10*(i+1)+25],[25,25])
		setShowSlider(window['G1A'+(j+1)+'A'+(i+1)+'SD'],true)
		setSliderMax(window['G1A'+(j+1)+'A'+(i+1)+'SD'],5)
		setSliderStep(window['G1A'+(j+1)+'A'+(i+1)+'SD'],.1)
		setValue(window['G1A'+(j+1)+'A'+(i+1)+'SD'],1)
	}
}


for (j = 0; j < nAlleles; j++) {
	for (i = 0; i < nAlleles; i++) {
		window['SDLinkA'+(j+1)+'A'+(i+1)] = createConnector('','Link', window['G1A'+(j+1)+'A'+(i+1)+'SD'], window['G1A'+(j+1)+'A'+(i+1)+'Height'])
	}
}


G1Cutoff = createPrimitive('G1 Height Cutoff Value','Variable', [550,50], [100,50])
G1Threshold = createPrimitive('G1 Threshold','Variable', [550,100], [100,50])
G1CutPerc = createPrimitive('G1 Cutoff Perc','Variable', [550,150], [100,50])



var G1AllHeight = [];
for (j = 0; j < nAlleles; j++) {
	for (i = 0; i < nAlleles; i++) {
		G1AllHeight.push('[G1 A'+(j+1)+'A'+(i+1)+' Height]')
	}
}
setValue(G1Cutoff, 'IfThenElse(Years=1,Join('+G1AllHeight+').Sort().Reverse(){[G1 Threshold]},0)')

setValue(G1Threshold, 'Round([G1 Cutoff Perc]*[G1 Pop])') 

setShowSlider(G1CutPerc,true)
setSliderMax(G1CutPerc,1)
setSliderStep(G1CutPerc,.01)
setValue(G1CutPerc,.1)

for (j = 0; j < nAlleles; j++) {
	for (i = 0; i < nAlleles; i++) {
		createConnector('','Link', window['G1A'+(j+1)+'A'+(i+1)+'Height'], G1Cutoff)
	}
}

createConnector('','Link', G1Threshold, G1Cutoff)
createConnector('','Link', G1CutPerc, G1Threshold)
createConnector('','Link', G1pop, G1Threshold)

for (j = 0; j < nAlleles; j++) {
	for (i = 0; i < nAlleles; i++) {
		window['G2A'+(j+1)+'A'+(i+1)+'Perc'] = createPrimitive('G2 A'+(j+1)+'A'+(i+1)+' Perc','Variable',[650,(j+1)*50+10*(i+1)],[50,50])
		setValue(window['G2A'+(j+1)+'A'+(i+1)+'Perc'],'IfThenElse(Years=1,[G1 A'+(j+1)+'A'+(i+1)+' Height].Filter(x >= [G1 Height Cutoff Value]).Count()/[G1 Threshold],0)')
		createConnector('','Link', window['G1A'+(j+1)+'A'+(i+1)+'Height'], window['G2A'+(j+1)+'A'+(i+1)+'Perc'])
		createConnector('','Link', G1Threshold, window['G2A'+(j+1)+'A'+(i+1)+'Perc'])
		createConnector('','Link', G1Cutoff, window['G2A'+(j+1)+'A'+(i+1)+'Perc'])

	}
}



for (j = 0; j < nAlleles; j++) {
	for (i = 0; i < nAlleles; i++) {
		setParent(window['G1A'+(j+1)+'A'+(i+1)], Gen1)
		setParent(window['FlowA'+(j+1)+'A'+(i+1)], Gen1)
		setParent(window['P1A'+(i+1)+'freq'], Gen1)
		setParent(window['P2A'+(i+1)+'freq'], Gen1)
		setParent(window['G1A'+(j+1)+'A'+(i+1)+'Height'], Gen1)
		setParent(window['HeightLinkA'+(j+1)+'A'+(i+1)], Gen1)
		setParent(window['G1A'+(j+1)+'A'+(i+1)+'Mean'], Gen1)
		setParent(window['MeanLinkA'+(j+1)+'A'+(i+1)], Gen1)
		setParent(window['G1A'+(j+1)+'A'+(i+1)+'SD'], Gen1)
		setParent(window['SDLinkA'+(j+1)+'A'+(i+1)], Gen1)
		setParent(G1Cutoff, Gen1)
		setParent(G1Threshold, Gen1)
		setParent(G1CutPerc, Gen1)
		setParent(window['G2A'+(j+1)+'A'+(i+1)+'Perc'], Gen1)
	}
}

setParent(Parents, Gen1)
setParent(G1pop, Gen1)


//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////


for (k = 0; k < nGenerations; k++){
	window['Gen'+(k+2)] = createPrimitive('Generation '+(k+2),'Folder',[0,Bottom+50],[750,((nAlleles)*50)+10*(nAlleles)+75])
	window['G'+(k+2)+'Parents'] = createPrimitive('G'+(k+2)+' Population','Stock',[200,Bottom+100],[100,50])
	setValue(window['G'+(k+2)+'Parents'], '[G''+(k+2)+' Pop]')
	setNonNegative(window['G'+(k+2)+'Parents'],true)
	window['G'+(k+2)+'pop'] = createPrimitive('G''+(k+2)+' Pop','Variable', [225,Bottom+150],[50,50])
	setValue(window['G'+(k+2)+'pop'], 50000)
	setShowSlider(window['G'+(k+2)+'pop'],true)
	setSliderMax(window['G'+(k+2)+'pop'],100000)
	setSliderStep(window['G'+(k+2)+'pop'],1)
	createConnector('Link','Link',window['G'+(k+2)+'pop'],window['G'+(k+2)+'Parents'])



	setParent(window['G'+(k+2)+'Parents'], window['Gen'+(k+2)])
	setParent(window['G'+(k+2)+'pop'], window['Gen'+(k+2)])



	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {
			window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)] = createPrimitive('G'+(k+2)+' A'+(j+1)+'A'+(i+1),'Stock',[350,(800+((j+1)*50))+10*(i+1)],[50,50])
			window['G'+(k+2)+'FlowA'+(j+1)+'A'+(i+1)] = createConnector('Flow G'+(k+2)+' A'+(j+1)+'A'+(i+1),'Flow', window['G'+(k+2)+'Parents'], window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)])
	 	}
	}




	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {
			createConnector('','Link',window['G'+(k+2)+'pop'],window['G'+(k+2)+'FlowA'+(j+1)+'A'+(i+1)])
		} 
	}


	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {
			createConnector('','Link',window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'Perc'],window['G'+(k+2)+'FlowA'+(j+1)+'A'+(i+1)])
		} 
	}


	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {
			setValue(window['G'+(k+2)+'FlowA'+(j+1)+'A'+(i+1)],'Round([G'+(k+2)+' Pop]*[G'+(k+2)+' A'+(j+1)+'A'+(i+1)+' Perc])')
		} 
	}




//create phenotype primitives for all genotypes

	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {
			window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'Height'] = createPrimitive('G'+(k+2)+' A'+(j+1)+'A'+(i+1)+' Height','Variable',[400,(800+((j+1)*50))+10*(i+1)],[50,50])
		}
	}	
	



	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {

			window['G'+(k+2)+'HeightLinkA'+(j+1)+'A'+(i+1)] = createConnector('','Link', window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)], window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'Height'])
		}
	}


	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {
			setValue(window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'Height'],'IfThenElse(Years = 2, Repeat(RandNormal([G'+(k+2)+' A'+(j+1)+'A'+(i+1)+' Mean],[G'+(k+2)+' A'+(j+1)+'A'+(i+1)+' SD]),[G'+(k+2)+' A'+(j+1)+'A'+(i+1)+']), 0)')
		}
	}

	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {
			window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'Mean'] = createPrimitive('G'+(k+2)+' A'+(j+1)+'A'+(i+1)+' Mean','Variable',[450,(800+((j+1)*50))+10*(i+1)],[25,25])
			createConnector('','Link', window['G'+(k+1)+'A'+(j+1)+'A'+(i+1)+'Mean'], window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'Mean'])
			setValue(window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'Mean'],'[G'+(k+1)+' A'+(j+1)+'A'+(i+1)+' Mean]')
		}
	}





	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {
			window['G'+(k+2)+'MeanLinkA'+(j+1)+'A'+(i+1)] = createConnector('', 'Link', window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'Mean'], window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'Height'])
		}
	}




	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {
			window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'SD'] = createPrimitive('G'+(k+2)+' A'+(j+1)+'A'+(i+1)+' SD','Variable',[450,(j+1)*50+10*(i+1)+825],[25,25])
			createConnector('','Link', window['G'+(k+1)+'A'+(j+1)+'A'+(i+1)+'SD'], window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'SD'])
			setValue(window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'SD'],'[G'+(k+1)+' A'+(j+1)+'A'+(i+1)+' SD]')
		}
	}



	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {
			window['G'+(k+2)+'SDLinkA'+(j+1)+'A'+(i+1)] = createConnector('','Link', window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'SD'], window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'Height'])
		}
	}




	window['G'+(k+2)+'Cutoff'] = createPrimitive('G'+(k+2)+' Height Cutoff Value','Variable', [550,850], [100,50])
	window['G'+(k+2)+'Threshold'] = createPrimitive('G'+(k+2)+' Threshold','Variable', [550,950], [100,50])
	window['G'+(k+2)+'CutPerc'] = createPrimitive('G'+(k+2)+' Cutoff Perc','Variable', [550,1050], [100,50])



	var AllHeight = [];
	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {
			AllHeight.push('[G'+(k+2)+' A'+(j+1)+'A'+(i+1)+' Height]')
		}
	}
	setValue(window['G'+(k+2)+'Cutoff'], 'IfThenElse(Years=2,Join('+AllHeight+').Sort().Reverse(){[G'+(k+2)+' Threshold]},0)')

	setValue(window['G'+(k+2)+'Threshold'], 'Round([G'+(k+2)+' Cutoff Perc]*[G'+(k+2)+' Pop])') 



	setShowSlider(window['G'+(k+2)+'CutPerc'],true)
	setSliderMax(window['G'+(k+2)+'CutPerc'],1)
	setSliderStep(window['G'+(k+2)+'CutPerc'],.01)
	setValue(window['G'+(k+2)+'CutPerc'],.1)



	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {
			createConnector('','Link', window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'Height'], window['G'+(k+2)+'Cutoff'])
		}
	}


	createConnector('','Link', window['G'+(k+2)+'Threshold'], window['G'+(k+2)+'Cutoff'])
	createConnector('','Link', window['G'+(k+2)+'CutPerc'], window['G'+(k+2)+'Threshold'])
	createConnector('','Link', window['G'+(k+2)+'pop'], window['G'+(k+2)+'Threshold'])


	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {
			window['G'+(k+3)+'A'+(j+1)+'A'+(i+1)+'Perc'] = createPrimitive('G'+(k+3)+' A'+(j+1)+'A'+(i+1)+' Perc','Variable',[650,(j+1)*50+10*(i+1)+800],[50,50])
			setValue(window['G'+(k+3)+'A'+(j+1)+'A'+(i+1)+'Perc'],'IfThenElse(Years=2,[G'+(k+2)+' A'+(j+1)+'A'+(i+1)+' Height].Filter(x >= [G'+(k+2)+' Height Cutoff Value]).Count()/[G'+(k+2)+' Threshold],0)')
			createConnector('','Link', window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'Height'], window['G'+(k+3)+'A'+(j+1)+'A'+(i+1)+'Perc'])
			createConnector('','Link', window['G'+(k+2)+'Threshold'], window['G'+(k+3)+'A'+(j+1)+'A'+(i+1)+'Perc'])
			createConnector('','Link', window['G'+(k+2)+'Cutoff'], window['G'+(k+3)+'A'+(j+1)+'A'+(i+1)+'Perc'])
	
		}
	}
	
	
	
	for (j = 0; j < nAlleles; j++) {
		for (i = 0; i < nAlleles; i++) {
			setParent(window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)], window['Gen'+(k+2)])
			setParent(window['G'+(k+2)+'FlowA'+(j+1)+'A'+(i+1)], window['Gen'+(k+2)])
			setParent(window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'Height'], window['Gen'+(k+2)])
			setParent(window['G'+(k+2)+'HeightLinkA'+(j+1)+'A'+(i+1)], window['Gen'+(k+2)])
			setParent(window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'Mean'], window['Gen'+(k+2)])
			setParent(window['G'+(k+2)+'MeanLinkA'+(j+1)+'A'+(i+1)], window['Gen'+(k+2)])
			setParent(window['G'+(k+2)+'A'+(j+1)+'A'+(i+1)+'SD'], window['Gen'+(k+2)])
			setParent(window['G'+(k+2)+'SDLinkA'+(j+1)+'A'+(i+1)], window['Gen'+(k+2)])
			setParent(window['G'+(k+2)+'Cutoff'], window['Gen'+(k+2)])
			setParent(window['G'+(k+2)+'Threshold'], window['Gen'+(k+2)])
			setParent(window['G'+(k+2)+'CutPerc'], window['Gen'+(k+2)])
			setParent(window['G'+(k+3)+'A'+(j+1)+'A'+(i+1)+'Perc'], window['Gen'+(k+2)])
		}
	}
}
//////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
